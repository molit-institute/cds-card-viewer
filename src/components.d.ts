/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CdsCard {
        /**
          * CDS card to be displayed. </br> Needs to be a JSON object
         */
        "card": string;
        /**
          * Language property of the component. </br> Currently suported: [de, en]
         */
        "locale": string;
        /**
          * If `true`, the component will end each link with an external-link icon.
         */
        "showExternalLinkIcon": boolean;
        /**
          * If `true`, the component will show the proposed actions.
         */
        "showSuggestionActions": boolean;
    }
}
declare global {
    interface HTMLCdsCardElement extends Components.CdsCard, HTMLStencilElement {
    }
    var HTMLCdsCardElement: {
        prototype: HTMLCdsCardElement;
        new (): HTMLCdsCardElement;
    };
    interface HTMLElementTagNameMap {
        "cds-card": HTMLCdsCardElement;
    }
}
declare namespace LocalJSX {
    interface CdsCard {
        /**
          * CDS card to be displayed. </br> Needs to be a JSON object
         */
        "card": string;
        /**
          * Language property of the component. </br> Currently suported: [de, en]
         */
        "locale"?: string;
        /**
          * If `true`, the component will end each link with an external-link icon.
         */
        "showExternalLinkIcon"?: boolean;
        /**
          * If `true`, the component will show the proposed actions.
         */
        "showSuggestionActions"?: boolean;
    }
    interface IntrinsicElements {
        "cds-card": CdsCard;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "cds-card": LocalJSX.CdsCard & JSXBase.HTMLAttributes<HTMLCdsCardElement>;
        }
    }
}
